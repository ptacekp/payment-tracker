/*
 * Copyright (c) 2019 Petr Ptáček
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
package cz.bscideas.paymenttracker.domain;

import com.google.auto.value.AutoValue;

import java.math.BigDecimal;

/**
 * Immutable instance of payment. A {@code Payment} class
 * consists of currency name and amount. Each {@code Payment}
 * represents one payment.
 *
 * <p>The {@code Payment} class provides getter for
 * currency name and amount. There is also factory method
 * to create new instance.
 *
 * <p>New instance of {@code Payment} class can be created
 * only by factory method {@link Payment#create(String, BigDecimal)}.
 * The {@code Payment} class is an abstract class.
 * Concrete implementation is generated by
 * Google AutoValue framework. So there is
 * direct access to any public constructor of {@code Payment}.
 *
 * @author Petr Ptáček
 */
@AutoValue
public abstract class Payment {

    /**
     * Return payment currency name.
     *
     * @return  instance of {@link String}.
     *          Never returns <tt>null</tt>.
     */
    public abstract String currency();

    /**
     * Return payment amount.
     *
     * @return  instance of {@link BigDecimal}.
     *          Never returns <tt>null</tt>.
     */
    public abstract BigDecimal amount();

    /**
     * Create new instance of {@code Payment}.
     *
     * @param   currency
     *          payment currency name.
     *
     * @param   amount
     *          payment amount.
     *
     * @return  instance of {@link Payment}.
     *          Never returns <tt>null</tt>.
     */
    public static Payment create(String currency, BigDecimal amount) {
        return new AutoValue_Payment(currency, amount);
    }
}
